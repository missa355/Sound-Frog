{"version":3,"file":"audiocard.cjs.production.js","sources":["../src/controls/Play.tsx","../src/controls/Pause.tsx","../src/controls/SkipBack.tsx","../src/controls/SkipForward.tsx","../src/components/ProgressBar.tsx","../src/components/Time.tsx","../src/hooks/useListeners.ts","../src/util.ts","../src/AudioCard.tsx","../src/hooks/useAudioPlayer.ts"],"sourcesContent":["import React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nexport const Play = (props: Props) => (\n  <svg viewBox=\"0 0 1.25 1.25\" display=\"block\" {...props}>\n    <path fill=\"currentColor\" d=\"M.25.125l1 .5-1 .5z\" />\n  </svg>\n)\n","import React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nexport const Pause = (props: Props) => (\n  <svg viewBox=\"0 0 1 1\" display=\"block\" {...props}>\n    <g fill=\"currentColor\">\n      <path d=\"M.15.15h.262v.7H.15zM.588.15H.85v.7H.588z\" />\n    </g>\n  </svg>\n)\n","import React from 'react'\n\ninterface Props {\n  seconds: number\n  className?: string\n}\n\nexport const SkipBack = ({ seconds, ...rest }: Props) => (\n  <svg viewBox=\"0 0 71 71\" {...rest}>\n    <defs>\n      <clipPath id=\"prefix__a\">\n        <path d=\"M.5 71.5V.5h71v71z\" />\n      </clipPath>\n    </defs>\n    <g clipPath=\"url(#prefix__a)\" transform=\"matrix(-1 0 0 1 71 0)\">\n      <path\n        d=\"M61.5 35.5c0 7-2 14-8 20-10 11-28 11-39 0-10-11-10-28 0-39 6-6 14-8 21-8h1\"\n        fill=\"none\"\n        strokeWidth={3}\n        stroke=\"currentColor\"\n        strokeLinecap=\"square\"\n      />\n      <path\n        d=\"M61.5 35.5h-6M12.5 35.5h-6M34.5 57.5v6\"\n        fill=\"none\"\n        strokeWidth={3}\n        stroke=\"currentColor\"\n      />\n      <path\n        d=\"M34 1l11 7-11 7v-1V0zM45 1l12 7-12 7v-1V0z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <text\n      x={23}\n      y={44}\n      fontSize={23}\n      fill=\"currentColor\"\n      className=\"prefix__svgcentertext\"\n    >\n      {seconds}\n    </text>\n  </svg>\n)\n","import React from 'react'\n\ninterface Props {\n  seconds: number\n  className?: string\n}\n\nexport const SkipForward = ({ seconds, ...rest }: Props) => (\n  <svg viewBox=\"0 0 71 71\" {...rest}>\n    <defs>\n      <clipPath id=\"prefix__a\">\n        <path d=\"M.5 71.5V.5h71v71z\" />\n      </clipPath>\n    </defs>\n    <g clipPath=\"url(#prefix__a)\">\n      <path\n        d=\"M61.5 35.5c0 7-2 14-8 20-10 11-28 11-39 0-10-11-10-28 0-39 6-6 14-8 21-8h1\"\n        fill=\"none\"\n        strokeWidth={3}\n        stroke=\"currentColor\"\n        strokeLinecap=\"square\"\n      />\n      <path\n        d=\"M61.5 35.5h-6M12.5 35.5h-6M34.5 57.5v6\"\n        fill=\"none\"\n        strokeWidth={3}\n        stroke=\"currentColor\"\n      />\n      <path\n        d=\"M34 1l11 7-11 7v-1V0zM45 1l12 7-12 7v-1V0z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <text\n      x={22}\n      y={44}\n      fontSize={23}\n      fill=\"currentColor\"\n      className=\"prefix__svgcentertext\"\n    >\n      {seconds}\n    </text>\n  </svg>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface Props {\n  total: number | void\n  value: number\n  color: string\n  background: string\n  completeBackground: string\n  seek: (value: number) => void\n  size: number\n}\n\nexport const ProgressBar = ({\n  background,\n  completeBackground,\n  color,\n  seek,\n  total,\n  value,\n  size\n}: Props) => {\n  const element = React.useRef<HTMLDivElement>(null)\n\n  return (\n    <Container\n      ref={element}\n      color={background}\n      style={{ height: size, minHeight: size }}\n    >\n      <Progress\n        value={value}\n        max={total || 0}\n        background={background}\n        completeBackground={completeBackground}\n      />\n      <Slider\n        value={value}\n        max={total || 0}\n        color={color}\n        size={size}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          seek(Number(event.target.value))\n        }\n      />\n    </Container>\n  )\n}\n\ninterface ContainerProps {\n  color: string\n}\nconst Container = styled.div<ContainerProps>`\n  position: relative;\n`\n\nconst fullWidth = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`\n\ninterface ProgressProps {\n  background: string\n  completeBackground: string\n}\nconst progressStyles = ({ completeBackground }: ProgressProps) => css`\n  background-color: ${completeBackground};\n`\nconst Progress = styled.progress<ProgressProps>`\n  ${fullWidth}\n  background-color: ${props => props.background};\n  box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.3);\n  &[value]::-webkit-progress-value {\n    ${progressStyles}\n  }\n  &[value]::-moz-progress-value {\n    ${progressStyles}\n  }\n  &[value]::-webkit-progress-bar {\n    background-color: ${props => props.background};\n  }\n`\n\ninterface SliderProps {\n  color: string\n  size: number\n}\nconst thumbStyles = ({ color, size }: SliderProps) => css`\n  background-color: ${color};\n  height: ${size}px;\n  width: ${size / 2}px;\n  appearance: none;\n  cursor: grab;\n`\nconst rangeStyles = css`\n  ${fullWidth}\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  appearance: none;\n`\nconst Slider = styled.input.attrs({ type: 'range' })<SliderProps>`\n  &:focus {\n    outline: none;\n  }\n  ${rangeStyles}\n  &[value]::-moz-range-track {\n    ${rangeStyles}\n  }\n  &[value]::-webkit-slider-thumb {\n    ${thumbStyles}\n  }\n  &[value]::-moz-slider-thumb {\n    ${thumbStyles}\n  }\n`\n","import * as React from 'react'\n\ninterface Props {\n  className?: string\n  value: number | void\n}\nexport function Time({ className, value }: Props) {\n  return <div className={className}>{secondsToHHMMSS(value)}</div>\n}\n\nfunction secondsToHHMMSS(t: number | void) {\n  if (t === undefined || isNaN(t)) return '-:--'\n  var h = Math.floor(t / 3600)\n  var m = Math.floor(t / 60) % 60\n  var s = Math.floor(t % 60)\n  return `${h ? h + ':' : ''}${h ? ('0' + m).slice(-2) : m}:${('0' + s).slice(\n    -2\n  )}`\n}\n","import * as React from 'react'\n\nexport interface Listenable {\n  addEventListener: (eventName: string, listener: EventListener) => void\n  removeEventListener: (eventName: string, listener: EventListener) => void\n}\n\nfunction useListener(\n  element: React.RefObject<Listenable>,\n  eventName: string,\n  listener: EventListener\n) {\n  const savedListener = React.useRef<EventListener>()\n  React.useEffect(() => {\n    savedListener.current = listener\n  }, [listener])\n\n  React.useEffect(() => {\n    const eventListener: EventListener = event =>\n      savedListener.current && savedListener.current(event)\n    if (element.current) {\n      element.current.addEventListener(eventName, eventListener)\n    }\n    return () => {\n      if (element.current) {\n        element.current.removeEventListener(eventName, eventListener)\n      }\n    }\n  }, [eventName, element.current])\n}\n\nexport function useListeners(\n  element: React.RefObject<Listenable>,\n  listeners: Record<string, EventListener>\n) {\n  Object.keys(listeners).forEach(eventName =>\n    useListener(element, eventName, listeners[eventName])\n  )\n}\n","export function preventDefault(fn: () => void) {\n  return (event: React.SyntheticEvent<any>) => {\n    event.preventDefault()\n    fn()\n  }\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { Play, Pause, SkipBack, SkipForward } from './controls'\nimport { ProgressBar, Time } from './components'\nimport { useAudioPlayer } from './hooks/useAudioPlayer'\nimport { preventDefault } from './util'\nimport useDimensions from 'react-use-dimensions'\n\nexport interface AudioCardProps {\n  /** Optional artwork for the song or podcast episode */\n  art?: string\n  /** Whether or not to automatically start playback upon mount */\n  autoPlay?: boolean\n  /** Background color for entire card */\n  background?: string\n  /** Optional class name to apply to the resulting container element */\n  className?: string\n  /**\n   * Primary color for controls\n   *\n   * @default '#666'\n   **/\n  color?: string\n  /**\n   * Optional url for a hyperlink to be rendered. Will only render if\n   * you include both link and linkText.\n   **/\n  link?: string\n  /**\n   * Optional text for a hyperlink to be rendered. Will only render if\n   * you include both link and linkText.\n   **/\n  linkText?: string\n  /**\n   * Whether or not to preload the MP3 file.\n   *\n   * @default 'none'\n   **/\n  preload?: 'auto' | 'metadata' | 'none'\n  /**\n   * Background for entire progress bar.\n   *\n   * @default '#DDD'\n   **/\n  progressBarBackground?: string\n  /**\n   * Background for the part to the left of the scrubber handle\n   *\n   * @default '#AAA'\n   **/\n  progressBarCompleteBackground?: string\n  /**\n   * Optional number of seconds to skip back when the \"skip back\"\n   * control is activated. If not provided, the \"skip back\" button\n   * will not be rendered. */\n  skipBackSeconds?: number\n  /**\n   * Optional number of seconds to skip forward when the \"skip forward\"\n   * control is activated. If not provided, the \"skip forward\" button\n   * will not be rendered.  */\n  skipForwardSeconds?: number\n\n  /** URL of the MP3 file to play */\n  source: string\n  /** Optional title of the song or podcast episode */\n  title?: string\n}\n\nconst canonicalWidth = 750\nconst canonicalHeight = 225\nconst aspectRatio = canonicalWidth / canonicalHeight\n\nexport function AudioCard({\n  art,\n  autoPlay,\n  background,\n  className,\n  color = '#666',\n  link,\n  linkText,\n  preload = 'none',\n  progressBarBackground = '#ddd',\n  progressBarCompleteBackground = '#aaa',\n  skipBackSeconds,\n  skipForwardSeconds,\n  source,\n  title\n}: AudioCardProps) {\n  const {\n    playerRef,\n    playing,\n    time,\n    duration,\n    play,\n    pause,\n    seek,\n    skipForward,\n    skipBack\n  } = useAudioPlayer()\n  const [ref, { width }] = useDimensions()\n  const height = width / aspectRatio\n  const h = (value: number) => (value * height) / canonicalHeight\n  const w = (value: number) => (value * width) / canonicalWidth\n  return (\n    <Container\n      className={className}\n      ref={ref}\n      background={background}\n      color={color}\n      style={{ height }}\n    >\n      <audio\n        src={source}\n        ref={playerRef}\n        style={{ display: 'none' }}\n        preload={preload}\n        autoPlay={autoPlay}\n      />\n      {art && (\n        <Art\n          src={art}\n          style={{ height, width: height, minHeight: height, minWidth: height }}\n        />\n      )}\n      <Content>\n        {title && (\n          <Title\n            style={{\n              fontSize: h(24),\n              width: w(canonicalWidth - (art ? canonicalHeight : 0) - 20),\n              margin: `${h(12)}px ${w(10)}px ${h(12)}px ${w(10)}px`,\n              minHeight: h(30)\n            }}\n          >\n            {title}\n          </Title>\n        )}\n        <Controls style={{ fontSize: h(16) }}>\n          {skipBackSeconds === undefined ? (\n            <Control as=\"div\" />\n          ) : (\n            <Control onClick={preventDefault(() => skipBack(skipBackSeconds))}>\n              <SkipBack seconds={skipBackSeconds} />\n            </Control>\n          )}\n          {!playing && (\n            <Control onClick={play}>\n              <Play />\n            </Control>\n          )}\n          {playing && (\n            <Control onClick={pause}>\n              <Pause />\n            </Control>\n          )}\n          {skipForwardSeconds === undefined ? (\n            <Control as=\"div\" />\n          ) : (\n            <Control\n              onClick={preventDefault(() => skipForward(skipForwardSeconds))}\n            >\n              <SkipForward seconds={skipForwardSeconds} />\n            </Control>\n          )}\n        </Controls>\n        {link && linkText && (\n          <Link href={link} style={{ fontSize: h(20) }}>\n            {linkText}\n          </Link>\n        )}\n        <Times style={{ fontSize: h(16) }}>\n          <Time value={time} />\n          <Time value={duration} />\n        </Times>\n        <ProgressBar\n          value={time}\n          total={duration}\n          color={color}\n          background={progressBarBackground}\n          completeBackground={progressBarCompleteBackground}\n          seek={seek}\n          size={h(20)}\n        />\n      </Content>\n    </Container>\n  )\n}\n\ninterface ContainerProps {\n  background?: string\n  color: string\n}\nconst Container = styled.div<ContainerProps>`\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  * {\n    font-family: 'San Francisco', 'Helvetica Neue', Helvetica, sans-serif;\n    line-height: 1em;\n  }\n  ${({ background }) => background && `background-color: ${background};`}\n  color: ${({ color }) => color};\n  a {\n    color: ${({ color }) => color};\n    text-decoration: none;\n    &:active {\n      color: ${({ color }) => color};\n    }\n  }\n`\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-flow: column nowrap;\n  padding: 0;\n`\n\nconst Controls = styled.div`\n  flex: 1;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`\n\nconst Times = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  margin: 0 5px 5px 5px;\n`\n\nconst Control = styled.a.attrs({ href: '#' })`\n  text-decoration: none;\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  margin: 5px;\n  width: 15%;\n`\n\nconst Art = styled.img``\n\nconst Title = styled.div`\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst Link = styled.a.attrs({ target: '_blank' })`\n  display: block;\n  text-align: center;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n","import * as React from 'react'\nimport { useListeners } from './useListeners'\nimport { preventDefault } from '../util'\n\nexport function useAudioPlayer() {\n  const [playing, setPlaying] = React.useState(false)\n  const [duration, setDuration] = React.useState<number | void>()\n  const [time, setTime] = React.useState(0)\n  const player = React.useRef<HTMLAudioElement>(null)\n\n  const updateDuration = () =>\n    setDuration(player.current ? player.current.duration : undefined)\n  const updateTime = () =>\n    setTime(player.current ? player.current.currentTime : 0)\n\n  useListeners(player, {\n    play: () => setPlaying(true),\n    pause: () => setPlaying(false),\n    ended: () => setPlaying(false),\n    durationchange: updateDuration,\n    seeked: updateTime,\n    timeupdate: updateTime,\n    loadedmetadata: updateDuration\n  })\n\n  return {\n    playerRef: player,\n    playing,\n    time,\n    duration,\n    play: preventDefault(() => player.current && player.current.play()),\n    pause: preventDefault(() => player.current && player.current.pause()),\n    seek: (time: number) =>\n      player.current &&\n      (player.current.currentTime =\n        time < 0 ? 0 : Math.min(time, player.current.duration)),\n    skipForward: (amount: number) =>\n      player.current &&\n      (player.current.currentTime = Math.min(\n        player.current.currentTime + amount,\n        player.current.duration\n      )),\n    skipBack: (amount: number) =>\n      player.current &&\n      (player.current.currentTime = Math.max(\n        player.current.currentTime - amount,\n        0\n      ))\n  }\n}\n"],"names":["Play","props","React","viewBox","display","fill","d","Pause","SkipBack","_a","seconds","rest","id","clipPath","transform","strokeWidth","stroke","strokeLinecap","x","y","fontSize","className","SkipForward","ProgressBar","background","completeBackground","color","seek","total","value","size","element","useRef","Container","ref","style","height","minHeight","Progress","max","Slider","onChange","event","Number","target","styled","div","fullWidth","css","progressStyles","progress","thumbStyles","rangeStyles","input","attrs","type","Time","React.createElement","t","undefined","isNaN","h","Math","floor","m","s","slice","secondsToHHMMSS","useListeners","listeners","Object","keys","forEach","eventName","listener","savedListener","React.useRef","React.useEffect","current","eventListener","addEventListener","removeEventListener","useListener","preventDefault","fn","canonicalWidth","canonicalHeight","aspectRatio","Content","Controls","Times","Control","a","href","Art","img","Title","Link","art","autoPlay","_b","link","linkText","_c","preload","_d","progressBarBackground","_e","progressBarCompleteBackground","skipBackSeconds","skipForwardSeconds","source","title","_f","playing","setPlaying","duration","setDuration","time","setTime","player","updateDuration","updateTime","currentTime","play","pause","ended","durationchange","seeked","timeupdate","loadedmetadata","playerRef","min","skipForward","amount","skipBack","_g","width","w","src","minWidth","margin","as","onClick"],"mappings":"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"}