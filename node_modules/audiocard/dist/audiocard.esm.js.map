{"version":3,"file":"audiocard.esm.js","sources":["../src/components/ProgressBar.tsx","../src/components/Time.tsx","../src/hooks/useListeners.ts","../src/util.ts","../src/hooks/useAudioPlayer.ts"],"sourcesContent":["import React from 'react'\nimport styled, { css } from 'styled-components'\n\ninterface Props {\n  total: number | void\n  value: number\n  color: string\n  background: string\n  completeBackground: string\n  seek: (value: number) => void\n  size: number\n}\n\nexport const ProgressBar = ({\n  background,\n  completeBackground,\n  color,\n  seek,\n  total,\n  value,\n  size\n}: Props) => {\n  const element = React.useRef<HTMLDivElement>(null)\n\n  return (\n    <Container\n      ref={element}\n      color={background}\n      style={{ height: size, minHeight: size }}\n    >\n      <Progress\n        value={value}\n        max={total || 0}\n        background={background}\n        completeBackground={completeBackground}\n      />\n      <Slider\n        value={value}\n        max={total || 0}\n        color={color}\n        size={size}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          seek(Number(event.target.value))\n        }\n      />\n    </Container>\n  )\n}\n\ninterface ContainerProps {\n  color: string\n}\nconst Container = styled.div<ContainerProps>`\n  position: relative;\n`\n\nconst fullWidth = css`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n`\n\ninterface ProgressProps {\n  background: string\n  completeBackground: string\n}\nconst progressStyles = ({ completeBackground }: ProgressProps) => css`\n  background-color: ${completeBackground};\n`\nconst Progress = styled.progress<ProgressProps>`\n  ${fullWidth}\n  background-color: ${props => props.background};\n  box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.3);\n  &[value]::-webkit-progress-value {\n    ${progressStyles}\n  }\n  &[value]::-moz-progress-value {\n    ${progressStyles}\n  }\n  &[value]::-webkit-progress-bar {\n    background-color: ${props => props.background};\n  }\n`\n\ninterface SliderProps {\n  color: string\n  size: number\n}\nconst thumbStyles = ({ color, size }: SliderProps) => css`\n  background-color: ${color};\n  height: ${size}px;\n  width: ${size / 2}px;\n  appearance: none;\n  cursor: grab;\n`\nconst rangeStyles = css`\n  ${fullWidth}\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  appearance: none;\n`\nconst Slider = styled.input.attrs({ type: 'range' })<SliderProps>`\n  &:focus {\n    outline: none;\n  }\n  ${rangeStyles}\n  &[value]::-moz-range-track {\n    ${rangeStyles}\n  }\n  &[value]::-webkit-slider-thumb {\n    ${thumbStyles}\n  }\n  &[value]::-moz-slider-thumb {\n    ${thumbStyles}\n  }\n`\n","import * as React from 'react'\n\ninterface Props {\n  className?: string\n  value: number | void\n}\nexport function Time({ className, value }: Props) {\n  return <div className={className}>{secondsToHHMMSS(value)}</div>\n}\n\nfunction secondsToHHMMSS(t: number | void) {\n  if (t === undefined || isNaN(t)) return '-:--'\n  var h = Math.floor(t / 3600)\n  var m = Math.floor(t / 60) % 60\n  var s = Math.floor(t % 60)\n  return `${h ? h + ':' : ''}${h ? ('0' + m).slice(-2) : m}:${('0' + s).slice(\n    -2\n  )}`\n}\n","import * as React from 'react'\n\nexport interface Listenable {\n  addEventListener: (eventName: string, listener: EventListener) => void\n  removeEventListener: (eventName: string, listener: EventListener) => void\n}\n\nfunction useListener(\n  element: React.RefObject<Listenable>,\n  eventName: string,\n  listener: EventListener\n) {\n  const savedListener = React.useRef<EventListener>()\n  React.useEffect(() => {\n    savedListener.current = listener\n  }, [listener])\n\n  React.useEffect(() => {\n    const eventListener: EventListener = event =>\n      savedListener.current && savedListener.current(event)\n    if (element.current) {\n      element.current.addEventListener(eventName, eventListener)\n    }\n    return () => {\n      if (element.current) {\n        element.current.removeEventListener(eventName, eventListener)\n      }\n    }\n  }, [eventName, element.current])\n}\n\nexport function useListeners(\n  element: React.RefObject<Listenable>,\n  listeners: Record<string, EventListener>\n) {\n  Object.keys(listeners).forEach(eventName =>\n    useListener(element, eventName, listeners[eventName])\n  )\n}\n","export function preventDefault(fn: () => void) {\n  return (event: React.SyntheticEvent<any>) => {\n    event.preventDefault()\n    fn()\n  }\n}\n","import * as React from 'react'\nimport { useListeners } from './useListeners'\nimport { preventDefault } from '../util'\n\nexport function useAudioPlayer() {\n  const [playing, setPlaying] = React.useState(false)\n  const [duration, setDuration] = React.useState<number | void>()\n  const [time, setTime] = React.useState(0)\n  const player = React.useRef<HTMLAudioElement>(null)\n\n  const updateDuration = () =>\n    setDuration(player.current ? player.current.duration : undefined)\n  const updateTime = () =>\n    setTime(player.current ? player.current.currentTime : 0)\n\n  useListeners(player, {\n    play: () => setPlaying(true),\n    pause: () => setPlaying(false),\n    ended: () => setPlaying(false),\n    durationchange: updateDuration,\n    seeked: updateTime,\n    timeupdate: updateTime,\n    loadedmetadata: updateDuration\n  })\n\n  return {\n    playerRef: player,\n    playing,\n    time,\n    duration,\n    play: preventDefault(() => player.current && player.current.play()),\n    pause: preventDefault(() => player.current && player.current.pause()),\n    seek: (time: number) =>\n      player.current &&\n      (player.current.currentTime =\n        time < 0 ? 0 : Math.min(time, player.current.duration)),\n    skipForward: (amount: number) =>\n      player.current &&\n      (player.current.currentTime = Math.min(\n        player.current.currentTime + amount,\n        player.current.duration\n      )),\n    skipBack: (amount: number) =>\n      player.current &&\n      (player.current.currentTime = Math.max(\n        player.current.currentTime - amount,\n        0\n      ))\n  }\n}\n"],"names":["React.useState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwDe;;;;MAgBd,IAAA,GAAA,EAAA,CAAA;;;;2CA0BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCvFoB,SAAA,GAAA,EAAA,CAAA;MAAW,KAAA,GAAA,EAAA,CAAA;;;;;;SAGzB;yBACa,KAAK,CAAC,CAAD,UAAU;;;;;;;;;;;;;;;KCajC;;gBAGc;;;;;;;;KAKZ;;;;;;;;;;ACpCE,SAAU,cAAV,CAAyB,EAAzB;;;;;;;;MCME,EAAA,GAAAA,QAAA,CAAA,KAAA,CAAA;qBAAA;wBAAA;;MACA,EAAA,GAAAA,QAAA,EAAA;sBAAA;yBAAA;;MACA,EAAA,GAAAA,QAAA,CAAA,CAAA,CAAA;kBAAA;qBAAA;;MAEA;;;WAEN,iEAAA;;;MACE;WAAA,wDAAA;;;cAGM,OAAA;QACN;;;;;;;;;;;;;GADM;;;;QAcN,EAAA;;QAEA,gBAAO;;KAAA;yBACC,CAAC,YAAA;;KAAD;0BACC;6DAET,QAAA,GAAW,CAAX;;;sEAMA,cAAA,YAAA;;;aAMD,cAAA,kFAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}