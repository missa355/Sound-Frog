{"ast":null,"code":"var _jsxFileName = \"/home/missa355/Tunes/src/components/playsearch/play2.js\";\nimport React, { Component } from 'react';\nimport track1 from \"../../music/track1.mp3\";\nimport track2 from \"../../music/track2.mp3\";\nimport track3 from \"../../music/track3.mp3\";\nimport track4 from \"../../music/track4.mp3\";\nimport Forward from \"../forward\";\nimport Backward from \"../backward\";\nimport vinyl from \"../../Photos/vinyl.png\";\nimport searchback from \"../../Photos/searchback.png\";\nimport bigplay from \"../../Photos/play.png\";\nimport bigresume from \"../../Photos/bottom_resume.png\"; // import Nav from \"../../components/nav2/nav2\"\n\nimport Record from \"../../components/record\";\nimport next from \"../../Photos/forward.png\";\nimport back from \"../../Photos/backward.png\";\nimport axios from \"axios\";\nimport Navbar from \"../side_burger\";\nimport cover from \"../../Photos/DAMN.png\";\nimport Slider from '@material-ui/core/Slider';\nimport \"./play2.css\";\nvar audio = document.getElementById(\"audio1\");\nvar is_on = false;\nvar index = 0; // var volume = 0.1\n\nexport class play2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song_lst: [track1, track2, track3, track4],\n      song_names: [\"BLOOD. ♪\", \"DNA. ♪\", \"YUH. ♪\", \"ELEMENT. ♪\", \"HUMBLE. ♪\", \"PRIDE. ♪\", \"PRIDE. ♪\", \"PRIDE. ♪\", \"PRIDE. ♪\", \"HUMBLE. ♪\", \"HUMBLE. ♪\"],\n      volume: 0.3,\n      progress: 0,\n      duration: 60,\n      //this is in seconds\n      selectedFile: null\n    };\n  }\n\n  // componentDidMount = () => {\n  //     axios.get(\"http://localhost:5000/track\")    \n  //     .then(res => {\n  //         for(var i=0;i<res.data.length;i++){\n  //             this.setState({song_names: [...this.state.song_names, res.data[i].Name]})\n  //             // console.log(this.state.song_names)\n  //         }\n  //     })  \n  //     var title = document.getElementById(\"title1\")\n  //     var title2 = document.getElementById(\"title2\")\n  //     title.innerText = \"♥ Why not pick a song OWO ♥ \"\n  //     title2.innerText = \"♥ Why not pick a song OWO ♥ \"\n  //     audio = document.getElementById(\"audio1\")\n  //     // audio.src = track1\n  //     audio.onended = () => {\n  //         this.forward()\n  //     }\n  //     var slider = document.getElementById(\"myRange1\")\n  //     slider.value = this.state.volume * 100\n  //     var prog = document.getElementById(\"progress\")\n  //     prog.value = this.state.progress\n  // }\n  // play = (i, main) =>{\n  //     // audio = document.getElementById(\"audio\")\n  //     // audio.pause()\n  //     if(!main){\n  //         index = i\n  //         axios.get(`http://localhost:5000/download/${this.state.song_names[index]}`)    \n  //         .then(res => console.log(res))\n  //         audio.src = `http://localhost:5000/download/${this.state.song_names[index]}`\n  //         // audio.src = this.state.song_lst[index]\n  //         audio.play()\n  //         audio.volume = this.state.volume \n  //         var vin = document.getElementById(\"vinyl\")\n  //         var title = document.getElementById(\"title1\")\n  //         var title2 = document.getElementById(\"title2\")\n  //         title.innerText = this.state.song_names[index]\n  //         title2.innerText = this.state.song_names[index]\n  //         is_on = true;\n  //         // is_on = true;\n  //         // audio.play()\n  //         vin.setAttribute(\"style\", \"animation-play-state: running;\");\n  //         document.getElementById(\"bigplay\").src=bigresume;\n  //         return ;\n  //     }\n  //     audio.volume = this.state.volume \n  //     var vin = document.getElementById(\"vinyl\")\n  //     var title = document.getElementById(\"title1\")\n  //     var title2 = document.getElementById(\"title2\")\n  //     title.innerText = this.state.song_names[index]\n  //     title2.innerText = this.state.song_names[index]\n  //     // is_on = true;\n  //     // audio.play()\n  //     vin.setAttribute(\"style\", \"animation-play-state: running;\");\n  //     // document.body.style.backgroundImage = \"url('../Photos/resume.png')\";\n  //     if(is_on){\n  //         audio.pause()\n  //         // this.setState({song_on: false})\n  //         is_on = false\n  //         vin.setAttribute(\"style\", \"animation-play-state: paused;\")\n  //         document.getElementById(\"bigplay\").src=bigplay;\n  //         // document.getElementById(\"main\").src=back;\n  //     }\n  //     else{\n  //         // this.setState({song_on: true})\n  //         is_on = true;\n  //         audio.play()\n  //         vin.setAttribute(\"style\", \"animation-play-state: running;\");\n  //         document.getElementById(\"bigplay\").src=bigresume;\n  //     }\n  // }\n  // forward = () => {\n  //     // this.setState({song_on: false})\n  //     is_on = false;\n  //     index = (index + 1) % 4\n  //     // this.setState({index: index % 3})\n  //     audio.src = this.state.song_lst[index]\n  //     this.play(index)\n  //     // audio.play()\n  // }\n  // backward = () => {\n  //     is_on = false;\n  //     index = index - 1\n  //     if(index < 0){\n  //         index = 2\n  //     }\n  //     audio.src = this.state.song_lst[index]\n  //     this.play(this.state.song_lst[index])\n  // }\n  // SetVolume = () => {\n  //     var slider = document.getElementById(\"myRange1\")\n  //         this.setState({\n  //           volume: slider.value / 100\n  //         })\n  //     audio.volume = slider.value / 100\n  // }\n  // SetProgress = () => {\n  //     var slider = document.getElementById(\"progress\")\n  //         this.setState({\n  //           progress: slider.value // precentage\n  //         })\n  //     audio.currentTime = slider.value * (audio.duration/100);\n  // }\n  // upload = (e) =>{\n  //     console.log(\"submit works\")\n  //     // console.log(this.state)\n  //     var myfile = document.getElementById(\"myfile\").files[0];\n  //     // var res = myfile.name.split(\".\")[0];\n  //     // console.log(res)\n  //     console.log(myfile)\n  //     const data = new FormData()\n  //     data.append('myfile', myfile)\n  //     var contenttype = {\n  //         headers : {\n  //             \"content-type\" : \"multipart/form-data\"\n  //         }\n  //     }\n  //     // upload audio file to server\n  //     console.log(data)\n  //     axios.post(\"http://localhost:5000/upload\", data, contenttype)    \n  //     .then(res => console.log(res))\n  //     // uploads name of the file which consequnly uploads the directry to the mongodb collection\n  //     const track_info = {name:myfile.name.toLowerCase().split(\" \").join(\"\")}\n  //     axios.post(\"http://localhost:5000/track/add\", track_info)    \n  //     .then(res => console.log(res))\n  // }\n  // onChangeHandler= (event) =>{\n  //     console.log(event.target.files[0])\n  //     console.log(document.getElementById(\"myfile\").files[0])\n  //     this.setState({\n  //       selectedFile: event.target.files[0],\n  //       loaded: 0,\n  //     })\n  //   }\n  render() {\n    return React.createElement(\"div\", {\n      id: \"search_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main_block_search\",\n      style: {\n        height: `${14.3 * this.state.song_names.length}vh`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"infobox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"damn\",\n      src: cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"DAMN\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Studio album by Kendrick Lamar\")), this.state.song_names.map((block, i) => React.createElement(Record, {\n      className: \"tracks\",\n      key: i,\n      onClick: () => this.play(i, false),\n      name: block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"breaker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom_player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"small_cover\",\n      src: cover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      onClick: () => this.backward(),\n      id: \"bigback\",\n      src: back,\n      alt: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      onClick: () => this.play(0, true),\n      id: \"bigplay\",\n      src: bigplay,\n      alt: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      onClick: () => this.forward(),\n      id: \"bignext\",\n      src: next,\n      alt: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      id: \"title2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"DNA.\"), React.createElement(\"p\", {\n      id: \"artist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Kendrick Lamar\"), React.createElement(\"div\", {\n      className: \"progress_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      style: {\n        width: '70vh',\n        color: 'white'\n      },\n      \"aria-labelledby\": \"disabled-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"contain_slider1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      style: {\n        width: '20vh',\n        color: 'white'\n      },\n      \"aria-labelledby\": \"disabled-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default play2;","map":{"version":3,"sources":["/home/missa355/Tunes/src/components/playsearch/play2.js"],"names":["React","Component","track1","track2","track3","track4","Forward","Backward","vinyl","searchback","bigplay","bigresume","Record","next","back","axios","Navbar","cover","Slider","audio","document","getElementById","is_on","index","play2","state","song_lst","song_names","volume","progress","duration","selectedFile","render","height","length","map","block","i","play","backward","forward","width","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport track1 from \"../../music/track1.mp3\"\nimport track2 from \"../../music/track2.mp3\"\nimport track3 from \"../../music/track3.mp3\"\nimport track4 from \"../../music/track4.mp3\"\nimport Forward from \"../forward\"\nimport Backward from \"../backward\"\nimport vinyl from \"../../Photos/vinyl.png\"\nimport searchback from \"../../Photos/searchback.png\"\nimport bigplay from \"../../Photos/play.png\"\nimport bigresume from \"../../Photos/bottom_resume.png\"\n// import Nav from \"../../components/nav2/nav2\"\nimport Record from \"../../components/record\"\nimport next from \"../../Photos/forward.png\"\nimport back from \"../../Photos/backward.png\"\nimport axios from \"axios\"\nimport Navbar from \"../side_burger\"\nimport cover from \"../../Photos/DAMN.png\"\nimport Slider from '@material-ui/core/Slider';\n\n\n\nimport \"./play2.css\"\n\nvar audio = document.getElementById(\"audio1\")\nvar is_on = false\nvar index = 0\n\n// var volume = 0.1\nexport class play2 extends Component {\n    state = {\n        song_lst : [track1, track2, track3 ,track4],\n        song_names : [\"BLOOD. ♪\", \"DNA. ♪\", \"YUH. ♪\", \"ELEMENT. ♪\", \"HUMBLE. ♪\", \"PRIDE. ♪\", \"PRIDE. ♪\",\"PRIDE. ♪\", \"PRIDE. ♪\", \"HUMBLE. ♪\", \"HUMBLE. ♪\"],\n        volume: 0.3,\n        progress: 0,\n        duration: 60, //this is in seconds\n        selectedFile: null\n\n    }; \n\n    // componentDidMount = () => {\n    //     axios.get(\"http://localhost:5000/track\")    \n    //     .then(res => {\n    //         for(var i=0;i<res.data.length;i++){\n    //             this.setState({song_names: [...this.state.song_names, res.data[i].Name]})\n    //             // console.log(this.state.song_names)\n    //         }\n    //     })  \n\n\n\n    //     var title = document.getElementById(\"title1\")\n    //     var title2 = document.getElementById(\"title2\")\n    //     title.innerText = \"♥ Why not pick a song OWO ♥ \"\n    //     title2.innerText = \"♥ Why not pick a song OWO ♥ \"\n    //     audio = document.getElementById(\"audio1\")\n    //     // audio.src = track1\n    //     audio.onended = () => {\n    //         this.forward()\n\n    //     }\n    //     var slider = document.getElementById(\"myRange1\")\n    //     slider.value = this.state.volume * 100\n    //     var prog = document.getElementById(\"progress\")\n    //     prog.value = this.state.progress\n\n\n    // }\n    // play = (i, main) =>{\n    //     // audio = document.getElementById(\"audio\")\n    //     // audio.pause()\n    //     if(!main){\n    //         index = i\n\n    //         axios.get(`http://localhost:5000/download/${this.state.song_names[index]}`)    \n    //         .then(res => console.log(res))\n\n    //         audio.src = `http://localhost:5000/download/${this.state.song_names[index]}`\n    //         // audio.src = this.state.song_lst[index]\n    //         audio.play()\n    //         audio.volume = this.state.volume \n    //         var vin = document.getElementById(\"vinyl\")\n    //         var title = document.getElementById(\"title1\")\n    //         var title2 = document.getElementById(\"title2\")\n    //         title.innerText = this.state.song_names[index]\n    //         title2.innerText = this.state.song_names[index]\n    //         is_on = true;\n\n    \n    //         // is_on = true;\n    //         // audio.play()\n    //         vin.setAttribute(\"style\", \"animation-play-state: running;\");\n    //         document.getElementById(\"bigplay\").src=bigresume;\n\n    //         return ;\n\n    //     }\n    //     audio.volume = this.state.volume \n    //     var vin = document.getElementById(\"vinyl\")\n    //     var title = document.getElementById(\"title1\")\n    //     var title2 = document.getElementById(\"title2\")\n    //     title.innerText = this.state.song_names[index]\n    //     title2.innerText = this.state.song_names[index]\n\n    //     // is_on = true;\n    //     // audio.play()\n    //     vin.setAttribute(\"style\", \"animation-play-state: running;\");\n    //     // document.body.style.backgroundImage = \"url('../Photos/resume.png')\";\n    //     if(is_on){\n    //         audio.pause()\n            \n    //         // this.setState({song_on: false})\n    //         is_on = false\n    //         vin.setAttribute(\"style\", \"animation-play-state: paused;\")\n    //         document.getElementById(\"bigplay\").src=bigplay;\n    //         // document.getElementById(\"main\").src=back;\n\n    //     }\n    //     else{\n    //         // this.setState({song_on: true})\n    //         is_on = true;\n    //         audio.play()\n    //         vin.setAttribute(\"style\", \"animation-play-state: running;\");\n    //         document.getElementById(\"bigplay\").src=bigresume;\n\n            \n    //     }\n    // }\n\n    // forward = () => {\n    //     // this.setState({song_on: false})\n    //     is_on = false;\n    //     index = (index + 1) % 4\n    //     // this.setState({index: index % 3})\n    //     audio.src = this.state.song_lst[index]\n    //     this.play(index)\n    //     // audio.play()\n\n\n        \n    // }\n\n    // backward = () => {\n    //     is_on = false;\n    //     index = index - 1\n    //     if(index < 0){\n    //         index = 2\n    //     }\n    //     audio.src = this.state.song_lst[index]\n    //     this.play(this.state.song_lst[index])\n\n    \n        \n    // }\n\n    // SetVolume = () => {\n    //     var slider = document.getElementById(\"myRange1\")\n    //         this.setState({\n    //           volume: slider.value / 100\n    //         })\n    //     audio.volume = slider.value / 100\n    // }\n    // SetProgress = () => {\n    //     var slider = document.getElementById(\"progress\")\n    //         this.setState({\n    //           progress: slider.value // precentage\n    //         })\n    //     audio.currentTime = slider.value * (audio.duration/100);\n    // }\n    // upload = (e) =>{\n    //     console.log(\"submit works\")\n    //     // console.log(this.state)\n    //     var myfile = document.getElementById(\"myfile\").files[0];\n    //     // var res = myfile.name.split(\".\")[0];\n    //     // console.log(res)\n    //     console.log(myfile)\n    //     const data = new FormData()\n    //     data.append('myfile', myfile)\n    //     var contenttype = {\n    //         headers : {\n    //             \"content-type\" : \"multipart/form-data\"\n    //         }\n    //     }\n    //     // upload audio file to server\n    //     console.log(data)\n    //     axios.post(\"http://localhost:5000/upload\", data, contenttype)    \n    //     .then(res => console.log(res))\n        \n    //     // uploads name of the file which consequnly uploads the directry to the mongodb collection\n    //     const track_info = {name:myfile.name.toLowerCase().split(\" \").join(\"\")}\n    //     axios.post(\"http://localhost:5000/track/add\", track_info)    \n    //     .then(res => console.log(res))\n        \n    // }\n    // onChangeHandler= (event) =>{\n    //     console.log(event.target.files[0])\n    //     console.log(document.getElementById(\"myfile\").files[0])\n\n    //     this.setState({\n    //       selectedFile: event.target.files[0],\n    //       loaded: 0,\n    //     })\n    //   }\n      \n    render() {\n        return (\n            <div id=\"search_div\">\n                <Navbar></Navbar>\n\n                <div className=\"main_block_search\" style={{height:`${14.3*this.state.song_names.length}vh`}}>\n\n            \n                    {/* <img src={vinyl} alt=\"VinylS\" id=\"vinyl\"/> */}\n                    <div id=\"infobox\">\n                        <img alt=\"damn\" src={cover}/>\n                        <h2>DAMN</h2>\n                        <p>Studio album by Kendrick Lamar</p>\n                    </div>\n                    {this.state.song_names.map((block, i) => \n                            <Record className=\"tracks\" key={i} onClick={() => this.play(i, false)} name={block}/>\n                        )}\n                        {/* <input onChange={this.onChangeHandler} type=\"file\" name=\"myfile\" id=\"myfile\" accept=\"audio/*\"/>\n                        <button onClick={this.upload}>submit</button> */}\n\n\n\n\n\n                    \n                    {/* <audio src=\"http://localhost:5000/download\" id=\"audio1\" controls /> */}\n                    {/* <Forward onClick={this.forward}/>\n                    <Backward onClick={this.backward}/> */}\n                    {/* <h3 id=\"title1\">♥ Why not pick a song OWO ♥ </h3> */}\n\n                    {/* <div className=\"contain_slider1\">\n                        <input className=\"slider1\" id=\"myRange1\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" onChange={() => this.SetVolume()}></input>\n                    </div>\n                    <div className=\"progress_bar\">\n                        <input className=\"slider1\" id=\"progress\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" onChange={() => this.SetProgress()}></input>\n                    </div> */}\n\n                    <div className=\"breaker\"></div>\n                </div>\n                <div className=\"bottom_player\">\n                        <img id =\"small_cover\" src={cover}/>\n\n                        <img  onClick={() => this.backward()} id=\"bigback\" src={back} alt=\"back\"/>\n                        <img onClick={() => this.play(0, true)} id=\"bigplay\" src={bigplay} alt=\"back\"/>\n                        <img onClick={() => this.forward()} id=\"bignext\" src={next} alt=\"back\"/>\n                        <h3 id=\"title2\">DNA.</h3>\n                        <p id=\"artist\">Kendrick Lamar</p>\n                        <div className=\"progress_bar\">\n                            <Slider style={{width:'70vh', color:'white'}}  aria-labelledby=\"disabled-slider\" />\n\n                            {/* <input className=\"slider1\" id=\"progress\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" onChange={() => this.SetProgress()}></input> */}\n                        </div>\n                        <div className=\"contain_slider1\">\n                            <Slider style={{width:'20vh', color:'white'}}  aria-labelledby=\"disabled-slider\" />\n\n                            {/* <input className=\"slider1\" id=\"myRange1\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" onChange={() => this.SetVolume()}></input> */}\n                        </div>\n\n\n                    </div>\n\n            </div>\n        )\n    }\n}\n\nexport default play2\n"]},"metadata":{},"sourceType":"module"}