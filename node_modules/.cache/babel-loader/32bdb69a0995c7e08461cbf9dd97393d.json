{"ast":null,"code":"var _jsxFileName = \"/home/missa355/Tunes/src/components/playsearch/play2.js\";\nimport React, { Component } from 'react';\nimport track1 from \"../../music/track1.mp3\";\nimport track2 from \"../../music/track2.mp3\";\nimport track3 from \"../../music/track3.mp3\";\nimport track4 from \"../../music/track4.mp3\";\nimport Forward from \"../forward\";\nimport Backward from \"../backward\";\nimport vinyl from \"../../Photos/vinyl.png\";\nimport searchback from \"../../Photos/searchback.png\";\nimport bigplay from \"../../Photos/play.png\";\nimport bigresume from \"../../Photos/bottom_resume.png\"; // import Nav from \"../../components/nav2/nav2\"\n\nimport Record from \"../../components/record\";\nimport next from \"../../Photos/forward.png\";\nimport back from \"../../Photos/backward.png\";\nimport axios from \"axios\";\nimport Navbar from \"../side_burger\";\nimport \"./play2.css\";\nvar audio = document.getElementById(\"audio1\");\nvar is_on = false;\nvar index = 0; // var volume = 0.1\n\nexport class play2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song_lst: [track1, track2, track3, track4],\n      song_names: [],\n      volume: 0.3,\n      progress: 0,\n      duration: 60,\n      //this is in seconds\n      selectedFile: null\n    };\n\n    this.componentDidMount = () => {\n      axios.get(\"http://localhost:5000/track\").then(res => {\n        for (var i = 0; i < res.data.length; i++) {\n          this.setState({\n            song_names: [...this.state.song_names, res.data[i].Name]\n          }); // console.log(this.state.song_names)\n        }\n      });\n      var title = document.getElementById(\"title1\");\n      var title2 = document.getElementById(\"title2\");\n      title.innerText = \"♥ Why not pick a song OWO ♥ \";\n      title2.innerText = \"♥ Why not pick a song OWO ♥ \";\n      audio = document.getElementById(\"audio1\"); // audio.src = track1\n\n      audio.onended = () => {\n        this.forward();\n      };\n\n      var slider = document.getElementById(\"myRange1\");\n      slider.value = this.state.volume * 100;\n      var prog = document.getElementById(\"progress\");\n      prog.value = this.state.progress;\n    };\n\n    this.play = (i, main) => {\n      // audio = document.getElementById(\"audio\")\n      // audio.pause()\n      if (!main) {\n        index = i;\n        axios.get(`http://localhost:5000/download/${this.state.song_names[index]}`).then(res => console.log(res));\n        audio.src = `http://localhost:5000/download/${this.state.song_names[index]}`; // audio.src = this.state.song_lst[index]\n\n        audio.play();\n        audio.volume = this.state.volume;\n        var vin = document.getElementById(\"vinyl\"); // var title = document.getElementById(\"title1\")\n        // var title2 = document.getElementById(\"title2\")\n        // title.innerText = this.state.song_names[index]\n        // title2.innerText = this.state.song_names[index]\n\n        is_on = true; // is_on = true;\n        // audio.play()\n\n        vin.setAttribute(\"style\", \"animation-play-state: running;\");\n        document.getElementById(\"bigplay\").src = bigresume;\n        return;\n      }\n\n      audio.volume = this.state.volume;\n      var vin = document.getElementById(\"vinyl\"); // var title = document.getElementById(\"title1\")\n      // var title2 = document.getElementById(\"title2\")\n      // title.innerText = this.state.song_names[index]\n      // title2.innerText = this.state.song_names[index]\n      // is_on = true;\n      // audio.play()\n\n      vin.setAttribute(\"style\", \"animation-play-state: running;\"); // document.body.style.backgroundImage = \"url('../Photos/resume.png')\";\n\n      if (is_on) {\n        audio.pause(); // this.setState({song_on: false})\n\n        is_on = false;\n        vin.setAttribute(\"style\", \"animation-play-state: paused;\");\n        document.getElementById(\"bigplay\").src = bigplay; // document.getElementById(\"main\").src=back;\n      } else {\n        // this.setState({song_on: true})\n        is_on = true;\n        audio.play();\n        vin.setAttribute(\"style\", \"animation-play-state: running;\");\n        document.getElementById(\"bigplay\").src = bigresume;\n      }\n    };\n\n    this.forward = () => {\n      // this.setState({song_on: false})\n      is_on = false;\n      index = (index + 1) % 4; // this.setState({index: index % 3})\n\n      audio.src = this.state.song_lst[index];\n      this.play(index); // audio.play()\n    };\n\n    this.backward = () => {\n      is_on = false;\n      index = index - 1;\n\n      if (index < 0) {\n        index = 2;\n      }\n\n      audio.src = this.state.song_lst[index];\n      this.play(this.state.song_lst[index]);\n    };\n\n    this.SetVolume = () => {\n      var slider = document.getElementById(\"myRange1\");\n      this.setState({\n        volume: slider.value / 100\n      });\n      audio.volume = slider.value / 100;\n    };\n\n    this.SetProgress = () => {\n      var slider = document.getElementById(\"progress\");\n      this.setState({\n        progress: slider.value // precentage\n\n      });\n      audio.currentTime = slider.value * (audio.duration / 100);\n    };\n\n    this.upload = e => {\n      console.log(\"submit works\"); // console.log(this.state)\n\n      var myfile = document.getElementById(\"myfile\").files[0]; // var res = myfile.name.split(\".\")[0];\n      // console.log(res)\n\n      console.log(myfile);\n      const data = new FormData();\n      data.append('myfile', myfile);\n      var contenttype = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      }; // upload audio file to server\n\n      console.log(data);\n      axios.post(\"http://localhost:5000/upload\", data, contenttype).then(res => console.log(res)); // uploads name of the file which consequnly uploads the directry to the mongodb collection\n\n      const track_info = {\n        name: myfile.name.toLowerCase().split(\" \").join(\"\")\n      };\n      axios.post(\"http://localhost:5000/track/add\", track_info).then(res => console.log(res));\n    };\n\n    this.onChangeHandler = event => {\n      console.log(event.target.files[0]);\n      console.log(document.getElementById(\"myfile\").files[0]);\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main_block_search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: vinyl,\n      alt: \"VinylS\",\n      id: \"vinyl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"record\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.song_names.map((block, i) => React.createElement(Record, {\n      key: i,\n      onClick: () => this.play(i, false),\n      name: block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      onChange: this.onChangeHandler,\n      type: \"file\",\n      name: \"myfile\",\n      id: \"myfile\",\n      accept: \"audio/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.upload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"submit\")), React.createElement(\"audio\", {\n      src: \"http://localhost:5000/download\",\n      id: \"audio1\",\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Forward, {\n      onClick: this.forward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(Backward, {\n      onClick: this.backward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      id: \"title1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"\\u2665 Why not pick a song OWO \\u2665 \"), React.createElement(\"div\", {\n      className: \"contain_slider1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider1\",\n      id: \"myRange1\",\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n      onChange: () => this.SetVolume(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"progress_bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"slider1\",\n      id: \"progress\",\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      step: \"1\",\n      onChange: () => this.SetProgress(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default play2;","map":{"version":3,"sources":["/home/missa355/Tunes/src/components/playsearch/play2.js"],"names":["React","Component","track1","track2","track3","track4","Forward","Backward","vinyl","searchback","bigplay","bigresume","Record","next","back","axios","Navbar","audio","document","getElementById","is_on","index","play2","state","song_lst","song_names","volume","progress","duration","selectedFile","componentDidMount","get","then","res","i","data","length","setState","Name","title","title2","innerText","onended","forward","slider","value","prog","play","main","console","log","src","vin","setAttribute","pause","backward","SetVolume","SetProgress","currentTime","upload","e","myfile","files","FormData","append","contenttype","headers","post","track_info","name","toLowerCase","split","join","onChangeHandler","event","target","loaded","render","map","block"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport track1 from \"../../music/track1.mp3\"\nimport track2 from \"../../music/track2.mp3\"\nimport track3 from \"../../music/track3.mp3\"\nimport track4 from \"../../music/track4.mp3\"\nimport Forward from \"../forward\"\nimport Backward from \"../backward\"\nimport vinyl from \"../../Photos/vinyl.png\"\nimport searchback from \"../../Photos/searchback.png\"\nimport bigplay from \"../../Photos/play.png\"\nimport bigresume from \"../../Photos/bottom_resume.png\"\n// import Nav from \"../../components/nav2/nav2\"\nimport Record from \"../../components/record\"\nimport next from \"../../Photos/forward.png\"\nimport back from \"../../Photos/backward.png\"\nimport axios from \"axios\"\nimport Navbar from \"../side_burger\"\n\n\n\nimport \"./play2.css\"\n\nvar audio = document.getElementById(\"audio1\")\nvar is_on = false\nvar index = 0\n\n// var volume = 0.1\nexport class play2 extends Component {\n    state = {\n        song_lst : [track1, track2, track3 ,track4],\n        song_names : [],\n        volume: 0.3,\n        progress: 0,\n        duration: 60, //this is in seconds\n        selectedFile: null\n\n    }; \n\n    componentDidMount = () => {\n        axios.get(\"http://localhost:5000/track\")    \n        .then(res => {\n            for(var i=0;i<res.data.length;i++){\n                this.setState({song_names: [...this.state.song_names, res.data[i].Name]})\n                // console.log(this.state.song_names)\n            }\n        })  \n\n\n\n        var title = document.getElementById(\"title1\")\n        var title2 = document.getElementById(\"title2\")\n        title.innerText = \"♥ Why not pick a song OWO ♥ \"\n        title2.innerText = \"♥ Why not pick a song OWO ♥ \"\n        audio = document.getElementById(\"audio1\")\n        // audio.src = track1\n        audio.onended = () => {\n            this.forward()\n\n        }\n        var slider = document.getElementById(\"myRange1\")\n        slider.value = this.state.volume * 100\n        var prog = document.getElementById(\"progress\")\n        prog.value = this.state.progress\n\n\n    }\n    play = (i, main) =>{\n        // audio = document.getElementById(\"audio\")\n        // audio.pause()\n        if(!main){\n            index = i\n\n            axios.get(`http://localhost:5000/download/${this.state.song_names[index]}`)    \n            .then(res => console.log(res))\n\n            audio.src = `http://localhost:5000/download/${this.state.song_names[index]}`\n            // audio.src = this.state.song_lst[index]\n            audio.play()\n            audio.volume = this.state.volume \n            var vin = document.getElementById(\"vinyl\")\n            // var title = document.getElementById(\"title1\")\n            // var title2 = document.getElementById(\"title2\")\n            // title.innerText = this.state.song_names[index]\n            // title2.innerText = this.state.song_names[index]\n            is_on = true;\n\n    \n            // is_on = true;\n            // audio.play()\n            vin.setAttribute(\"style\", \"animation-play-state: running;\");\n            document.getElementById(\"bigplay\").src=bigresume;\n\n            return ;\n\n        }\n        audio.volume = this.state.volume \n        var vin = document.getElementById(\"vinyl\")\n        // var title = document.getElementById(\"title1\")\n        // var title2 = document.getElementById(\"title2\")\n        // title.innerText = this.state.song_names[index]\n        // title2.innerText = this.state.song_names[index]\n\n        // is_on = true;\n        // audio.play()\n        vin.setAttribute(\"style\", \"animation-play-state: running;\");\n        // document.body.style.backgroundImage = \"url('../Photos/resume.png')\";\n        if(is_on){\n            audio.pause()\n            \n            // this.setState({song_on: false})\n            is_on = false\n            vin.setAttribute(\"style\", \"animation-play-state: paused;\")\n            document.getElementById(\"bigplay\").src=bigplay;\n            // document.getElementById(\"main\").src=back;\n\n        }\n        else{\n            // this.setState({song_on: true})\n            is_on = true;\n            audio.play()\n            vin.setAttribute(\"style\", \"animation-play-state: running;\");\n            document.getElementById(\"bigplay\").src=bigresume;\n\n            \n        }\n    }\n\n    forward = () => {\n        // this.setState({song_on: false})\n        is_on = false;\n        index = (index + 1) % 4\n        // this.setState({index: index % 3})\n        audio.src = this.state.song_lst[index]\n        this.play(index)\n        // audio.play()\n\n\n        \n    }\n\n    backward = () => {\n        is_on = false;\n        index = index - 1\n        if(index < 0){\n            index = 2\n        }\n        audio.src = this.state.song_lst[index]\n        this.play(this.state.song_lst[index])\n\n    \n        \n    }\n\n    SetVolume = () => {\n        var slider = document.getElementById(\"myRange1\")\n            this.setState({\n              volume: slider.value / 100\n            })\n        audio.volume = slider.value / 100\n    }\n    SetProgress = () => {\n        var slider = document.getElementById(\"progress\")\n            this.setState({\n              progress: slider.value // precentage\n            })\n        audio.currentTime = slider.value * (audio.duration/100);\n    }\n    upload = (e) =>{\n        console.log(\"submit works\")\n        // console.log(this.state)\n        var myfile = document.getElementById(\"myfile\").files[0];\n        // var res = myfile.name.split(\".\")[0];\n        // console.log(res)\n        console.log(myfile)\n        const data = new FormData()\n        data.append('myfile', myfile)\n        var contenttype = {\n            headers : {\n                \"content-type\" : \"multipart/form-data\"\n            }\n        }\n        // upload audio file to server\n        console.log(data)\n        axios.post(\"http://localhost:5000/upload\", data, contenttype)    \n        .then(res => console.log(res))\n        \n        // uploads name of the file which consequnly uploads the directry to the mongodb collection\n        const track_info = {name:myfile.name.toLowerCase().split(\" \").join(\"\")}\n        axios.post(\"http://localhost:5000/track/add\", track_info)    \n        .then(res => console.log(res))\n        \n    }\n    onChangeHandler= (event) =>{\n        console.log(event.target.files[0])\n        console.log(document.getElementById(\"myfile\").files[0])\n\n        this.setState({\n          selectedFile: event.target.files[0],\n          loaded: 0,\n        })\n      }\n      \n    render() {\n        return (\n            <div>\n                <div className=\"main_block_search\">\n                    <Navbar></Navbar>\n\n                    \n                    {/* <img src={searchback} alt=\"back\" id=\"main\"/> */}\n                    <img src={vinyl} alt=\"VinylS\" id=\"vinyl\"/>\n                    {/* <img src={speaker} alt=\"speaker\" id=\"speaker\"/>\n\n                    {/* <Nav id=\"nav\"></Nav> */}\n\n                    {/* <div onClick={() => this.play(this.state.song_lst[index])} className=\"play\"/> */}\n                    <div className=\"record\">\n                        {this.state.song_names.map((block, i) => \n                            <Record key={i} onClick={() => this.play(i, false)} name={block}/>\n                        )}\n                        {/* <Record onClick={() => this.play(0, false)} name={this.state.song_names[0]}/>\n                        <Record onClick={() => this.play(1, false)} name={this.state.song_names[1]}/>\n                        <Record onClick={() => this.play(2, false)} name={this.state.song_names[2]}/>\n                        <Record onClick={() => this.play(3, false)} name={this.state.song_names[3]}/> */}\n                        <input onChange={this.onChangeHandler} type=\"file\" name=\"myfile\" id=\"myfile\" accept=\"audio/*\"/>\n                        <button onClick={this.upload}>submit</button>\n\n\n\n                    </div>\n\n\n                    \n                    <audio src=\"http://localhost:5000/download\" id=\"audio1\" controls />\n                    <Forward onClick={this.forward}/>\n                    <Backward onClick={this.backward}/>\n                    <h3 id=\"title1\">♥ Why not pick a song OWO ♥ </h3>\n\n                    <div className=\"contain_slider1\">\n                        <input className=\"slider1\" id=\"myRange1\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" onChange={() => this.SetVolume()}></input>\n                    </div>\n                    <div className=\"progress_bar\">\n                        <input className=\"slider1\" id=\"progress\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" onChange={() => this.SetProgress()}></input>\n                    </div>\n\n                    {/* <div className=\"bottom_player\">\n                        <img  onClick={() => this.backward()} id=\"bigback\" src={back} alt=\"back\"/>\n                        <img onClick={() => this.play(0, true)} id=\"bigplay\" src={bigplay} alt=\"back\"/>\n                        <img onClick={() => this.forward()} id=\"bignext\" src={next} alt=\"back\"/>\n                        <h3 id=\"title2\">Choose a song OWO</h3>\n\n                    </div> */}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default play2\n"]},"metadata":{},"sourceType":"module"}