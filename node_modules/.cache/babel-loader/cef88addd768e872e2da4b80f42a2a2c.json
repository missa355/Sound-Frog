{"ast":null,"code":"export function getFromStorage(key) {\n  if (!key) {\n    //key is nu;;\n    return null;\n  }\n\n  try {\n    const valueStr = localStorage.getItem(key); //gets token(keys) from users local storage\n\n    if (valueStr) {\n      return JSON.parse(valueStr);\n    }\n\n    return null;\n  } catch (err) {\n    return null;\n  }\n}\nexport function setInStorage(key, obj) {\n  if (!key) {\n    console.error('Error: Key is missing');\n  }\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj)); //strogfy is the inverse of json.parse\n  } catch (err) {\n    console.error(err);\n  }\n}","map":{"version":3,"sources":["/home/missa355/Tunes/src/utils/storage.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","error","setItem","stringify"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA6B;AAChC,MAAI,CAACA,GAAL,EAAU;AAAE;AACV,WAAO,IAAP;AACD;;AACD,MAAI;AACF,UAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAjB,CADE,CAC0C;;AAC5C,QAAIC,QAAJ,EAAc;AACZ,aAAOG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAND,CAME,OAAOK,GAAP,EAAY;AACZ,WAAO,IAAP;AACD;AACF;AACD,OAAO,SAASC,YAAT,CAAsBP,GAAtB,EAA2BQ,GAA3B,EAAgC;AACrC,MAAI,CAACR,GAAL,EAAU;AACRS,IAAAA,OAAO,CAACC,KAAR,CAAc,uBAAd;AACD;;AACD,MAAI;AACFR,IAAAA,YAAY,CAACS,OAAb,CAAqBX,GAArB,EAA0BI,IAAI,CAACQ,SAAL,CAAeJ,GAAf,CAA1B,EADE,CAC8C;AACjD,GAFD,CAEE,OAAOF,GAAP,EAAY;AACZG,IAAAA,OAAO,CAACC,KAAR,CAAcJ,GAAd;AACD;AACF","sourcesContent":["export function getFromStorage(key) {\n    if (!key) { //key is nu;;\n      return null;\n    }\n    try {\n      const valueStr = localStorage.getItem(key); //gets token(keys) from users local storage\n      if (valueStr) {\n        return JSON.parse(valueStr);\n      }\n      return null;\n    } catch (err) {\n      return null;\n    }\n  }\n  export function setInStorage(key, obj) {\n    if (!key) {\n      console.error('Error: Key is missing');\n    }\n    try {\n      localStorage.setItem(key, JSON.stringify(obj)); //strogfy is the inverse of json.parse\n    } catch (err) {\n      console.error(err);\n    }\n  }"]},"metadata":{},"sourceType":"module"}